name: Docker Symfony CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Build the Docker image
        run: docker-compose -f compose.yaml build

      - name: Validate composer.json and composer.lock
        run: docker-compose -f compose.yaml run php composer validate

      - name: Install dependencies
        run: docker-compose -f compose.yaml run php composer install --prefer-dist --no-progress --no-suggest

      - name: Verify database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          docker-compose exec php php bin/console doctrine:database:create
          docker-compose exec php php  bin/console doctrine:m:m -n
          docker-compose exec php php  bin/console doctrine:fixtures:load -n

      - name: Coding standards checks (PHP CS Fixer)
        run: composer cs-fixer-ci

      - name: Run PHPStan
        run: docker-compose -f compose.yaml run php vendor/bin/phpstan analyse

      - name: Run PHP CS Fixer
        run: docker-compose -f docker-compose.yaml run php vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Run PHPUnit tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: docker-compose -f docker-compose.yaml run php vendor/bin/phpunit